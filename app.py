import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from scipy import stats

# ======================
# Configura√ß√£o inicial
# ======================
st.set_page_config(page_title="Meu Dashboard Profissional", layout="wide")

# ======================
# Menu de navega√ß√£o
# ======================
menu = st.sidebar.radio("Navega√ß√£o", ["Home", "Forma√ß√£o e Experi√™ncia", "Skills", "An√°lise de Dados"])

# ======================
# Aba Home
# ======================
if menu == "Home":
    st.title("Bem-vindo ao meu Dashboard üöÄ")
    st.subheader("Apresenta√ß√£o Pessoal")
    st.write("""
    Ol√°, meu nome √© [SEU NOME].  
    Este dashboard foi desenvolvido em Python + Streamlit para apresentar meu perfil profissional e realizar uma an√°lise de dados aplicada.
    """)
    st.markdown("**Objetivo profissional:** Aqui voc√™ descreve em poucas linhas seu objetivo.")

# ======================
# Aba Forma√ß√£o e Experi√™ncia
# ======================
elif menu == "Forma√ß√£o e Experi√™ncia":
    st.title("üéì Forma√ß√£o Acad√™mica e Experi√™ncia")
    st.write("- Gradua√ß√£o em ... (coloque sua √°rea)")
    st.write("- Cursos relevantes: ...")
    st.write("- Experi√™ncia profissional: ...")

# ======================
# Aba Skills
# ======================
elif menu == "Skills":
    st.title("üí° Minhas Skills")
    st.write("**Tecnologias:** Python, SQL, Power BI, Streamlit, etc.")
    st.write("**Ferramentas:** Git, Excel, etc.")
    st.write("**Soft Skills:** Comunica√ß√£o, Trabalho em equipe, Resolu√ß√£o de problemas")

# ======================
# Aba An√°lise de Dados
# ======================
elif menu == "An√°lise de Dados":
    st.title("üìä An√°lise de Dados")

    st.subheader("1. Carregando os dados")
    uploaded_file = st.file_uploader("Envie um arquivo CSV para an√°lise", type="csv")

    if uploaded_file:
        df = pd.read_csv(uploaded_file)
        st.write("Visualiza√ß√£o inicial dos dados:")
        st.dataframe(df.head())

        # Tipos de vari√°veis
        st.subheader("Tipos de vari√°veis")
        st.write(df.dtypes)

        # Medidas centrais
        st.subheader("2. Medidas centrais e an√°lise inicial")
        st.write("Descri√ß√£o estat√≠stica dos dados num√©ricos:")
        st.write(df.describe())

        # Distribui√ß√£o de uma vari√°vel num√©rica
        col_num = st.selectbox("Escolha uma coluna num√©rica para visualizar a distribui√ß√£o:", df.select_dtypes(include=np.number).columns)
        fig, ax = plt.subplots()
        sns.histplot(df[col_num], kde=True, ax=ax)
        st.pyplot(fig)

        # Correla√ß√£o
        st.subheader("Correla√ß√£o entre vari√°veis")
        corr = df.corr()
        fig, ax = plt.subplots(figsize=(6,4))
        sns.heatmap(corr, annot=True, cmap="coolwarm", ax=ax)
        st.pyplot(fig)

        # Teste de hip√≥tese
        st.subheader("3. Intervalo de Confian√ßa e Teste de Hip√≥tese")
        st.write("Exemplo: Testar se a m√©dia de uma vari√°vel √© igual a um valor hipot√©tico.")

        col_test = st.selectbox("Escolha uma coluna num√©rica para o teste:", df.select_dtypes(include=np.number).columns)
        hipotese = st.number_input("Digite o valor da m√©dia hipot√©tica:", value=0.0)

        # t-test
        t_stat, p_value = stats.ttest_1samp(df[col_test].dropna(), hipotese)

        st.write(f"Estat√≠stica t: {t_stat:.4f}")
        st.write(f"p-valor: {p_value:.4f}")

        if p_value < 0.05:
            st.success("Rejeitamos a hip√≥tese nula: a m√©dia √© diferente do valor hipot√©tico.")
        else:
            st.info("N√£o rejeitamos a hip√≥tese nula: n√£o h√° evid√™ncia suficiente para dizer que a m√©dia √© diferente.")

